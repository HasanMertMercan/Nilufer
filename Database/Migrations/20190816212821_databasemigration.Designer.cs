// <auto-generated />
using System;
using Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Database.Migrations
{
    [DbContext(typeof(StoreDbContext))]
    [Migration("20190816212821_databasemigration")]
    partial class databasemigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("ValueTypes.Entity.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("EmailAddress");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("PhoneNumber")
                        .IsRequired();

                    b.Property<decimal>("TotalBalance");

                    b.HasKey("Id");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("ValueTypes.Entity.CustomerOrder", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("AdvancePayment");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("CustomerId");

                    b.Property<DateTime>("DeliveryDate");

                    b.Property<int>("OrderAmount");

                    b.Property<int>("OrderStatus");

                    b.Property<int>("ProductId");

                    b.Property<decimal>("TotalPrice");

                    b.HasKey("OrderId");

                    b.ToTable("CustomerOrder");
                });

            modelBuilder.Entity("ValueTypes.Entity.Dealer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("EmailAddress");

                    b.Property<string>("OwnerName");

                    b.Property<string>("PhoneNumber")
                        .IsRequired();

                    b.Property<string>("StoreName")
                        .IsRequired();

                    b.Property<decimal>("TotalBalance");

                    b.HasKey("Id");

                    b.ToTable("Dealer");
                });

            modelBuilder.Entity("ValueTypes.Entity.DealerOrder", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("AdvancePayment");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("DealerId");

                    b.Property<DateTime>("DeliveryDate");

                    b.Property<int>("OrderAmount");

                    b.Property<int>("OrderStatus");

                    b.Property<int>("ProductId");

                    b.Property<decimal>("TotalPrice");

                    b.HasKey("OrderId");

                    b.ToTable("DealerOrder");
                });

            modelBuilder.Entity("ValueTypes.Entity.Expenditure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<int>("OutgoingOrderId");

                    b.Property<decimal>("TotalAmount");

                    b.HasKey("Id");

                    b.ToTable("Expenditure");
                });

            modelBuilder.Entity("ValueTypes.Entity.OutgoingOrder", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("AdvancePayment");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<DateTime>("DeliveryDate");

                    b.Property<int>("OrderAmount");

                    b.Property<int>("OrderStatus");

                    b.Property<int>("ProductId");

                    b.Property<int>("SupplierId");

                    b.Property<decimal>("TotalPrice");

                    b.HasKey("OrderId");

                    b.ToTable("OutgoingOrder");
                });

            modelBuilder.Entity("ValueTypes.Entity.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("ProductCode");

                    b.Property<decimal>("UnitPrice");

                    b.HasKey("Id");

                    b.ToTable("ProductList");
                });

            modelBuilder.Entity("ValueTypes.Entity.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("EmailAddress");

                    b.Property<string>("OwnerName");

                    b.Property<string>("PhoneNumber")
                        .IsRequired();

                    b.Property<string>("StoreName")
                        .IsRequired();

                    b.Property<decimal>("TotalBalance");

                    b.HasKey("Id");

                    b.ToTable("Supplier");
                });
#pragma warning restore 612, 618
        }
    }
}
